{"ast":null,"code":"var _jsxFileName = \"/home/blaise/git-repos/headphone-amp-calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // declaring default volume levels in db PL\n\nconst safe_volume = 85;\nconst moderate_volume = 100;\nconst fairlyloud_volume = 110;\nconst veryloud_volume = 115;\nconst painful_volume = 120;\n/* Functions for caluclations */\n\nfunction powerCalculation(sensitivity) {\n  var power_safe;\n  var power_moderate;\n  var power_fairlyloud;\n  var power_veryloud;\n  var power_painful;\n  power_safe = 10 ** ((safe_volume - sensitivity) / 10);\n  power_moderate = 10 ** ((moderate_volume - sensitivity) / 10);\n  power_fairlyloud = 10 ** ((fairlyloud_volume - sensitivity) / 10);\n  power_veryloud = 10 ** ((veryloud_volume - sensitivity) / 10);\n  power_painful = 10 ** ((painful_volume - sensitivity) / 10);\n  return {\n    power_safe: power_safe,\n    power_moderate: power_moderate,\n    power_fairlyloud: power_fairlyloud,\n    power_veryloud: power_veryloud,\n    power_painful: power_painful\n  };\n}\n\nclass HeadphoneSpecs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      impedance: '',\n      sensitivity: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // Need for multiple events\n    const name = target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    // Need for multiple submits\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    }, \" Headphone Impedance (Ohms): \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"impedance\",\n      type: \"text\" // need to be able to convert text to number\n      ,\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }\n    }, \" Headphone Sensitivity (dB SPL / mW): \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sensitivity\",\n      type: \"text\" // need to be able to convert text to number\n      ,\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(HeadphoneSpecs, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 2\n  }\n}), powerCalculation.power_safe, document.getElementById('root'));","map":{"version":3,"sources":["/home/blaise/git-repos/headphone-amp-calculator/src/index.js"],"names":["React","ReactDOM","safe_volume","moderate_volume","fairlyloud_volume","veryloud_volume","painful_volume","powerCalculation","sensitivity","power_safe","power_moderate","power_fairlyloud","power_veryloud","power_painful","HeadphoneSpecs","Component","constructor","props","state","impedance","handleChange","bind","handleSubmit","event","name","target","value","setState","preventDefault","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// declaring default volume levels in db PL\n\t\nconst safe_volume = 85;\nconst moderate_volume = 100;\nconst fairlyloud_volume = 110;\nconst veryloud_volume = 115;\nconst painful_volume = 120;\n\n/* Functions for caluclations */\nfunction powerCalculation(sensitivity) {\n\tvar power_safe;\n\tvar power_moderate;\n\tvar power_fairlyloud;\n\tvar power_veryloud;\n\tvar power_painful;\n\n\tpower_safe = 10**((safe_volume - sensitivity) / 10)\n\tpower_moderate = 10**((moderate_volume - sensitivity) / 10)\n\tpower_fairlyloud = 10**((fairlyloud_volume - sensitivity) / 10)\n\tpower_veryloud = 10**((veryloud_volume - sensitivity) / 10)\n\tpower_painful = 10**((painful_volume - sensitivity) / 10)\n\t\t\n\treturn {\n\t\tpower_safe : power_safe,\n\t\tpower_moderate : power_moderate,\n\t\tpower_fairlyloud : power_fairlyloud,\n\t\tpower_veryloud : power_veryloud,\n\t\tpower_painful : power_painful\n\t}\n}\n\nclass HeadphoneSpecs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timpedance: '',\n\t\t\tsensitivity: ''\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\t\n\thandleChange(event) {\n\t\t// Need for multiple events\n\t\tconst name = target.name;\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\thandleSubmit(event) {\n\t\t// Need for multiple submits\n\t\tevent.preventDefault();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t  <label>\n\t\t\t    <h3> Headphone Impedance (Ohms): </h3>\n\t\t\t    <input \n\t\t\t      name=\"impedance\"\n\t\t\t      type=\"text\" \t\t\t\t\t\t// need to be able to convert text to number\n\t\t\t      value={this.state.value}\n\t\t\t      onChange={this.handleChange}\n\t\t\t    />\n\t\t\t  </label>\n\t\t\t  <label>\n\t\t\t    <h3> Headphone Sensitivity (dB SPL / mW): </h3>\n\t\t\t      <input\n\t\t\t        name=\"sensitivity\"\n\t\t\t        type=\"text\"\t\t\t\t\t\t// need to be able to convert text to number\n\t\t\t        value={this.state.value}\n\t\t\t        onChange={this.handleChange}\n\t\t\t      />\n\t\t\t  </label>\n\t\t\t  <input \n\t\t\t    type=\"submit\"\n\t\t\t    value=\"Submit\"\n\t\t\t  />\n\t\t\t</form>\n\t\t\t);\n\t}\n}\n\nReactDOM.render(\n\t<HeadphoneSpecs />,\n\tpowerCalculation.power_safe,\n\tdocument.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}