{"ast":null,"code":"var _jsxFileName = \"/home/blaise/git-repos/headphone-amp-calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Tableresults from './Tableresults.js'; // Array for target volumes in dB SPL\n\nconst volumes = {\n  safe_volume: 85,\n  moderate_volume: 100,\n  fairlyloud_volume: 110,\n  veryloud_volume: 115,\n  painful_volume: 120\n};\nconst {\n  safe_volume,\n  moderate_volume,\n  fairlyloud_volume,\n  veryloud_volume,\n  painful_volume\n} = volumes; // Base power calculator function\n\nfunction powerCalculation(sensitivity, volume_level) {\n  console.log(sensitivity, volume_level);\n  return 10 ** ((volume_level - sensitivity) / 10);\n} // Base voltage calculator\n\n\nfunction voltageCalculation(power, impedance) {\n  return Math.sqrt(power / 1000 * impedance);\n} // Base current calculator\n\n\nfunction currentCalculation(power, impedance) {\n  return Math.sqrt(power / (1000 * impedance)) * 1000;\n}\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sensitivity: '',\n      impedance: '',\n      errormessageone: '',\n      errormessagetwo: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    //let name = event.target.name;\n    //let value = event.target.value;\n    // Logging purposes\n    console.log(event);\n    console.log(event.target.name);\n    console.log(event.target.value);\n    let {\n      value,\n      name\n    } = event.target;\n    let {\n      errone,\n      errtwo\n    } = ''; // Displays an error on the side of the input box\n    // when the entry is non-numerical\n    // *** Can use ? operator when optimizing the IF statements\n\n    if (name === \"impedance\") {\n      if (value !== \"\" && !Number(value)) {\n        // Displays error for Impedance\n        errone = \"  Impedance must be a number\";\n      }\n    }\n\n    if (name === \"sensitivity\") {\n      if (value !== \"\" && !Number(value)) {\n        // Displays error for Sensitivity\n        errtwo = \"  Sensitivity must be a number\";\n      }\n    }\n\n    this.setState({\n      [name]: value,\n      errormessageone: errone,\n      errormessagetwo: errtwo\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Logging purposes\n\n    const data = this.state;\n    console.log(data); // Assigning the local variables to input\n\n    let impedance = this.state.impedance;\n    let sensitivity = this.state.sensitivity; // Checks if entries submitted are not numerical\n    // Returns an alert message\n    // Can use ? operator later for optimization\n\n    if (impedance !== '' && sensitivity !== '' && !Number(impedance) && !Number(sensitivity)) {\n      // Both entries are non-numbers\n      alert(\"Impedance and Sensitivity entries are not numbers\");\n    } else if (impedance !== '' && !Number(impedance)) {\n      // Impedance is not a number\n      alert(\"Impedance entry is not a number\");\n    } else if (sensitivity !== '' && !Number(sensitivity)) {\n      // Sensitivity is not a number\n      alert(\"Sensitivity entry is not a number\");\n    } else if (impedance === '' && sensitivity === '') {\n      // Empty field\n      return;\n    }\n\n    this.setState(state => ({\n      impedance: this.state.impedance,\n      sensitivity: this.state.sensitivity,\n      power_safe: powerCalculation(sensitivity, volumes.safe_volume).toPrecision(2),\n      power_moderate: powerCalculation(sensitivity, volumes.moderate_volume).toPrecision(3),\n      power_fairlyloud: powerCalculation(sensitivity, volumes.fairlyloud_volume).toPrecision(4),\n      power_veryloud: powerCalculation(sensitivity, volumes.veryloud_volume).toPrecision(5),\n      power_painful: powerCalculation(sensitivity, volumes.painful_volume).toPrecision(5),\n      voltage_safe: voltageCalculation(powerCalculation(sensitivity, volumes.safe_volume), impedance).toPrecision(2),\n      voltage_moderate: voltageCalculation(powerCalculation(sensitivity, volumes.moderate_volume), impedance).toPrecision(3),\n      voltage_fairlyloud: voltageCalculation(powerCalculation(sensitivity, volumes.fairlyloud_volume), impedance).toPrecision(4),\n      voltage_veryloud: voltageCalculation(powerCalculation(sensitivity, volumes.veryloud_volume), impedance).toPrecision(4),\n      voltage_painful: voltageCalculation(powerCalculation(sensitivity, volumes.painful_volume), impedance).toPrecision(4),\n      current_safe: currentCalculation(powerCalculation(sensitivity, volumes.safe_volume), impedance).toPrecision(3),\n      current_moderate: currentCalculation(powerCalculation(sensitivity, volumes.moderate_volume), impedance).toPrecision(4),\n      current_fairlyloud: currentCalculation(powerCalculation(sensitivity, volumes.fairlyloud_volume), impedance).toPrecision(4),\n      current_veryloud: currentCalculation(powerCalculation(sensitivity, volumes.veryloud_volume), impedance).toPrecision(4),\n      current_painful: currentCalculation(powerCalculation(sensitivity, volumes.painful_volume), impedance).toPrecision(4)\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"initialpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }, \" Thanks for coming to the headphone amp calculator page \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    }, \" Headphone Impedance is \", this.state.impedance, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 62\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 6\n      }\n    }, \" Headphone Sensitivity is \", this.state.sensitivity, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 66\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 6\n      }\n    }, \" Impedance (Ohms): \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"impedance\",\n      className: \"impedance\",\n      type: \"text\",\n      placeholder: \"Impedance\",\n      onChange: this.handleChange,\n      value: this.state.impedance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 6\n      }\n    }), this.state.errormessageone, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 6\n      }\n    }, \" Sensitivity (db SPL / mW): \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sensitivity\",\n      className: \"sensitivity\",\n      type: \"text\",\n      placeholder: \"Sensitivity\",\n      onChange: this.handleChange,\n      value: this.state.sensitivity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 6\n      }\n    }), this.state.errormessagetwo, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 6\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 6\n      }\n    }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Tableresults, {\n      power_safe: this.state.power_safe,\n      power_moderate: this.state.power_moderate,\n      power_fairlyloud: this.state.power_fairlyloud,\n      power_veryloud: this.state.power_veryloud,\n      power_painful: this.state.power_painful,\n      voltage_safe: this.state.voltage_safe,\n      voltage_moderate: this.state.voltage_moderate,\n      voltage_fairlyloud: this.state.voltage_fairlyloud,\n      voltage_veryloud: this.state.voltage_veryloud,\n      voltage_painful: this.state.voltage_painful,\n      current_safe: this.state.current_safe,\n      current_moderate: this.state.current_moderate,\n      current_fairlyloud: this.state.current_fairlyloud,\n      current_veryloud: this.state.current_veryloud,\n      current_painful: this.state.current_painful,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 8\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(InputForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 2\n  }\n}), document.getElementById('root')); // Printing out volumes array\n// for(var index in volumes) {\n//\tdocument.write(index + \" : \" + volumes[index] + \" dB SPL\" + \"<br />\");\n//}\n// Printing out calculated power calculations from the volumes array\n// document.write( \"<br />\")\t\t// just putting space between\n// for(var index in volumes) {\n//\tdocument.write( powerCalculation(sensitivity, volumes[index]).toPrecision(3) + \" mW\" + \"<br />\" );\n//}","map":{"version":3,"sources":["/home/blaise/git-repos/headphone-amp-calculator/src/index.js"],"names":["React","ReactDOM","Tableresults","volumes","safe_volume","moderate_volume","fairlyloud_volume","veryloud_volume","painful_volume","powerCalculation","sensitivity","volume_level","console","log","voltageCalculation","power","impedance","Math","sqrt","currentCalculation","InputForm","Component","constructor","props","state","errormessageone","errormessagetwo","handleChange","bind","handleSubmit","event","target","name","value","errone","errtwo","Number","setState","preventDefault","data","alert","power_safe","toPrecision","power_moderate","power_fairlyloud","power_veryloud","power_painful","voltage_safe","voltage_moderate","voltage_fairlyloud","voltage_veryloud","voltage_painful","current_safe","current_moderate","current_fairlyloud","current_veryloud","current_painful","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,YAAP,MAAyB,mBAAzB,C,CAGA;;AACA,MAAMC,OAAO,GAAG;AACfC,EAAAA,WAAW,EAAE,EADE;AAEfC,EAAAA,eAAe,EAAE,GAFF;AAGfC,EAAAA,iBAAiB,EAAE,GAHJ;AAIfC,EAAAA,eAAe,EAAE,GAJF;AAKfC,EAAAA,cAAc,EAAE;AALD,CAAhB;AAOA,MAAM;AAAEJ,EAAAA,WAAF;AAAeC,EAAAA,eAAf;AACJC,EAAAA,iBADI;AACeC,EAAAA,eADf;AAEJC,EAAAA;AAFI,IAGFL,OAHJ,C,CAKA;;AACA,SAASM,gBAAT,CAA0BC,WAA1B,EAAuCC,YAAvC,EAAqD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBC,YAAzB;AACA,SAAO,OAAO,CAACA,YAAY,GAAGD,WAAhB,IAA+B,EAAtC,CAAP;AACA,C,CAED;;;AACA,SAASI,kBAAT,CAA4BC,KAA5B,EAAmCC,SAAnC,EAA8C;AAC7C,SAAOC,IAAI,CAACC,IAAL,CAAUH,KAAK,GAAG,IAAR,GAAeC,SAAzB,CAAP;AACA,C,CAED;;;AACA,SAASG,kBAAT,CAA4BJ,KAA5B,EAAmCC,SAAnC,EAA8C;AAC7C,SAAOC,IAAI,CAACC,IAAL,CAAUH,KAAK,IAAI,OAAOC,SAAX,CAAf,IAAwC,IAA/C;AACA;;AAGD,MAAMI,SAAN,SAAwBpB,KAAK,CAACqB,SAA9B,CAAwC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZd,MAAAA,WAAW,EAAE,EADD;AAEZM,MAAAA,SAAS,EAAE,EAFC;AAGZS,MAAAA,eAAe,EAAE,EAHL;AAIZC,MAAAA,eAAe,EAAE;AAJL,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AACnB;AACA;AAEA;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAK,CAACC,MAAN,CAAaC,IAAzB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAK,CAACC,MAAN,CAAaE,KAAzB;AAEA,QAAI;AAACA,MAAAA,KAAD;AAAQD,MAAAA;AAAR,QAAgBF,KAAK,CAACC,MAA1B;AACA,QAAI;AAACG,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmB,EAAvB,CAVmB,CAYnB;AACA;AACA;;AACA,QAAGH,IAAI,KAAK,WAAZ,EAAyB;AACxB,UAAGC,KAAK,KAAK,EAAV,IAAgB,CAACG,MAAM,CAACH,KAAD,CAA1B,EAAmC;AAClC;AACAC,QAAAA,MAAM,GAAG,8BAAT;AACA;AACD;;AACD,QAAGF,IAAI,KAAK,aAAZ,EAA2B;AAC1B,UAAGC,KAAK,KAAK,EAAV,IAAgB,CAACG,MAAM,CAACH,KAAD,CAA1B,EAAmC;AAClC;AACAE,QAAAA,MAAM,GAAG,gCAAT;AACA;AACD;;AAED,SAAKE,QAAL,CAAc;AACb,OAACL,IAAD,GAAQC,KADK;AAEbR,MAAAA,eAAe,EAAES,MAFJ;AAGbR,MAAAA,eAAe,EAAES;AAHJ,KAAd;AAKA;;AAEDN,EAAAA,YAAY,CAACC,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACQ,cAAN,GADmB,CAGnB;;AACA,UAAMC,IAAI,GAAG,KAAKf,KAAlB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY0B,IAAZ,EALmB,CAOnB;;AACA,QAAIvB,SAAS,GAAG,KAAKQ,KAAL,CAAWR,SAA3B;AACA,QAAIN,WAAW,GAAG,KAAKc,KAAL,CAAWd,WAA7B,CATmB,CAWnB;AACA;AACA;;AACA,QAAGM,SAAS,KAAK,EAAd,IAAoBN,WAAW,KAAK,EAApC,IACF,CAAC0B,MAAM,CAACpB,SAAD,CADL,IACoB,CAACoB,MAAM,CAAC1B,WAAD,CAD9B,EAC6C;AAC5C;AACA8B,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACA,KAJD,MAKM,IAAGxB,SAAS,KAAK,EAAd,IAAoB,CAACoB,MAAM,CAACpB,SAAD,CAA9B,EAA2C;AAC/C;AACAwB,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACA,KAHI,MAIA,IAAG9B,WAAW,KAAK,EAAhB,IAAsB,CAAC0B,MAAM,CAAC1B,WAAD,CAAhC,EAA+C;AACnD;AACA8B,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACA,KAHI,MAIA,IAAGxB,SAAS,KAAK,EAAd,IAAoBN,WAAW,KAAK,EAAvC,EAA2C;AAC/C;AACA;AACA;;AAEF,SAAK2B,QAAL,CAAcb,KAAK,KAAK;AACvBR,MAAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWR,SADC;AAEvBN,MAAAA,WAAW,EAAE,KAAKc,KAAL,CAAWd,WAFD;AAGvB+B,MAAAA,UAAU,EAAEhC,gBAAgB,CAACC,WAAD,EAAcP,OAAO,CAACC,WAAtB,CAAhB,CAAmDsC,WAAnD,CAA+D,CAA/D,CAHW;AAIvBC,MAAAA,cAAc,EAAElC,gBAAgB,CAACC,WAAD,EAAcP,OAAO,CAACE,eAAtB,CAAhB,CAAuDqC,WAAvD,CAAmE,CAAnE,CAJO;AAKvBE,MAAAA,gBAAgB,EAAEnC,gBAAgB,CAACC,WAAD,EAAcP,OAAO,CAACG,iBAAtB,CAAhB,CAAyDoC,WAAzD,CAAqE,CAArE,CALK;AAMvBG,MAAAA,cAAc,EAAEpC,gBAAgB,CAACC,WAAD,EAAcP,OAAO,CAACI,eAAtB,CAAhB,CAAuDmC,WAAvD,CAAmE,CAAnE,CANO;AAOvBI,MAAAA,aAAa,EAAErC,gBAAgB,CAACC,WAAD,EAAcP,OAAO,CAACK,cAAtB,CAAhB,CAAsDkC,WAAtD,CAAkE,CAAlE,CAPQ;AAQvBK,MAAAA,YAAY,EAAEjC,kBAAkB,CAACL,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACC,WAArB,CAAjB,EAAoDY,SAApD,CAAlB,CAAiF0B,WAAjF,CAA6F,CAA7F,CARS;AASvBM,MAAAA,gBAAgB,EAAElC,kBAAkB,CAACL,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACE,eAArB,CAAjB,EAAwDW,SAAxD,CAAlB,CAAqF0B,WAArF,CAAiG,CAAjG,CATK;AAUvBO,MAAAA,kBAAkB,EAAEnC,kBAAkB,CAACL,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACG,iBAArB,CAAjB,EAA0DU,SAA1D,CAAlB,CAAuF0B,WAAvF,CAAmG,CAAnG,CAVG;AAWvBQ,MAAAA,gBAAgB,EAAEpC,kBAAkB,CAACL,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACI,eAArB,CAAjB,EAAwDS,SAAxD,CAAlB,CAAqF0B,WAArF,CAAiG,CAAjG,CAXK;AAYvBS,MAAAA,eAAe,EAAErC,kBAAkB,CAACL,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACK,cAArB,CAAjB,EAAuDQ,SAAvD,CAAlB,CAAoF0B,WAApF,CAAgG,CAAhG,CAZM;AAavBU,MAAAA,YAAY,EAAEjC,kBAAkB,CAACV,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACC,WAArB,CAAjB,EAAoDY,SAApD,CAAlB,CAAiF0B,WAAjF,CAA6F,CAA7F,CAbS;AAcvBW,MAAAA,gBAAgB,EAAElC,kBAAkB,CAACV,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACE,eAArB,CAAjB,EAAwDW,SAAxD,CAAlB,CAAqF0B,WAArF,CAAiG,CAAjG,CAdK;AAevBY,MAAAA,kBAAkB,EAAEnC,kBAAkB,CAACV,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACG,iBAArB,CAAjB,EAA0DU,SAA1D,CAAlB,CAAuF0B,WAAvF,CAAmG,CAAnG,CAfG;AAgBvBa,MAAAA,gBAAgB,EAAEpC,kBAAkB,CAACV,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACI,eAArB,CAAjB,EAAwDS,SAAxD,CAAlB,CAAqF0B,WAArF,CAAiG,CAAjG,CAhBK;AAiBvBc,MAAAA,eAAe,EAAErC,kBAAkB,CAACV,gBAAgB,CAACC,WAAD,EAAaP,OAAO,CAACK,cAArB,CAAjB,EAAuDQ,SAAvD,CAAlB,CAAoF0B,WAApF,CAAgG,CAAhG;AAjBM,KAAL,CAAnB;AAmBA;;AAEDe,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,QAAQ,EAAE,KAAK5B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,eACmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA6B,KAAKL,KAAL,CAAWR,SAAxC,MAFF,eAE0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF1D,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA+B,KAAKQ,KAAL,CAAWd,WAA1C,MAHF,eAG8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH9D,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,eAKE;AACC,MAAA,IAAI,EAAC,WADN;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,WAJd;AAKE,MAAA,QAAQ,EAAE,KAAKiB,YALjB;AAMK,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWR,SANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAaG,KAAKQ,KAAL,CAAWC,eAbd,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAdF,eAeE;AACC,MAAA,IAAI,EAAC,aADN;AAEE,MAAA,SAAS,EAAC,aAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,aAJd;AAKE,MAAA,QAAQ,EAAE,KAAKE,YALjB;AAME,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWd,WANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAuBG,KAAKc,KAAL,CAAWE,eAvBd,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,oBAwBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBT,eAyBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzBF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,eA8BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BR,CADA,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACA,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWiB,UADvB;AAEA,MAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWmB,cAF3B;AAGA,MAAA,gBAAgB,EAAE,KAAKnB,KAAL,CAAWoB,gBAH7B;AAIA,MAAA,cAAc,EAAE,KAAKpB,KAAL,CAAWqB,cAJ3B;AAKA,MAAA,aAAa,EAAE,KAAKrB,KAAL,CAAWsB,aAL1B;AAMA,MAAA,YAAY,EAAE,KAAKtB,KAAL,CAAWuB,YANzB;AAOA,MAAA,gBAAgB,EAAE,KAAKvB,KAAL,CAAWwB,gBAP7B;AAQA,MAAA,kBAAkB,EAAE,KAAKxB,KAAL,CAAWyB,kBAR/B;AASA,MAAA,gBAAgB,EAAE,KAAKzB,KAAL,CAAW0B,gBAT7B;AAUA,MAAA,eAAe,EAAE,KAAK1B,KAAL,CAAW2B,eAV5B;AAWA,MAAA,YAAY,EAAE,KAAK3B,KAAL,CAAW4B,YAXzB;AAYA,MAAA,gBAAgB,EAAE,KAAK5B,KAAL,CAAW6B,gBAZ7B;AAaA,MAAA,kBAAkB,EAAE,KAAK7B,KAAL,CAAW8B,kBAb/B;AAcA,MAAA,gBAAgB,EAAE,KAAK9B,KAAL,CAAW+B,gBAd7B;AAeA,MAAA,eAAe,EAAE,KAAK/B,KAAL,CAAWgC,eAf5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjCF,CADD;AAuDA;;AA/JsC;;AAmKxCvD,QAAQ,CAACwD,MAAT,eACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAECC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFD,E,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Tableresults from './Tableresults.js'\n\n\n// Array for target volumes in dB SPL\nconst volumes = {\n\tsafe_volume: 85,\n\tmoderate_volume: 100,\n\tfairlyloud_volume: 110,\n\tveryloud_volume: 115,\n\tpainful_volume: 120\n};\nconst { safe_volume, moderate_volume, \n\t\tfairlyloud_volume, veryloud_volume, \n\t\tpainful_volume } \n\t\t= volumes;\n\n// Base power calculator function\nfunction powerCalculation(sensitivity, volume_level) {\n\tconsole.log(sensitivity, volume_level);\n\treturn 10 ** ((volume_level - sensitivity) / 10)\n}\n\n// Base voltage calculator\nfunction voltageCalculation(power, impedance) {\n\treturn Math.sqrt(power / 1000 * impedance)\n}\n\n// Base current calculator\nfunction currentCalculation(power, impedance) {\n\treturn Math.sqrt(power / (1000 * impedance)) * 1000\n}\n\n\nclass InputForm extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tsensitivity: '', \n\t\t\timpedance: '',\n\t\t\terrormessageone: '',\n\t\t\terrormessagetwo: '',\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\t//let name = event.target.name;\n\t\t//let value = event.target.value;\n\n\t\t// Logging purposes\n\t\tconsole.log(event)\n\t\tconsole.log(event.target.name)\n\t\tconsole.log(event.target.value)\n\n\t\tlet {value, name} = event.target;\n\t\tlet {errone, errtwo} = '';\n\n\t\t// Displays an error on the side of the input box\n\t\t// when the entry is non-numerical\n\t\t// *** Can use ? operator when optimizing the IF statements\n\t\tif(name === \"impedance\") {\n\t\t\tif(value !== \"\" && !Number(value)) {\n\t\t\t\t// Displays error for Impedance\n\t\t\t\terrone = \"  Impedance must be a number\";\n\t\t\t}\n\t\t}\n\t\tif(name === \"sensitivity\") {\n\t\t\tif(value !== \"\" && !Number(value)) {\n\t\t\t\t// Displays error for Sensitivity\n\t\t\t\terrtwo = \"  Sensitivity must be a number\";\n\t\t\t}\n\t\t}\t\n\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t\terrormessageone: errone,\n\t\t\terrormessagetwo: errtwo\n\t\t});\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\t// Logging purposes\n\t\tconst data = this.state;\n\t\tconsole.log(data)\n\n\t\t// Assigning the local variables to input\n\t\tlet impedance = this.state.impedance;\n\t\tlet sensitivity = this.state.sensitivity;\n\n\t\t// Checks if entries submitted are not numerical\n\t\t// Returns an alert message\n\t\t// Can use ? operator later for optimization\n\t\tif(impedance !== '' && sensitivity !== '' && \n\t\t\t!Number(impedance) && !Number(sensitivity)) {\n\t\t\t// Both entries are non-numbers\n\t\t\talert(\"Impedance and Sensitivity entries are not numbers\");\n\t\t}\n\t\t\telse if(impedance !== '' && !Number(impedance)) {\n\t\t\t\t// Impedance is not a number\n\t\t\t\talert(\"Impedance entry is not a number\");\n\t\t\t}\n\t\t\telse if(sensitivity !== '' && !Number(sensitivity)) {\n\t\t\t\t// Sensitivity is not a number\n\t\t\t\talert(\"Sensitivity entry is not a number\");\n\t\t\t}\n\t\t\telse if(impedance === '' && sensitivity === '') {\n\t\t\t\t// Empty field\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\tthis.setState(state => ({\n\t\t\timpedance: this.state.impedance,\n\t\t\tsensitivity: this.state.sensitivity,\n\t\t\tpower_safe: powerCalculation(sensitivity, volumes.safe_volume).toPrecision(2),\n\t\t\tpower_moderate: powerCalculation(sensitivity, volumes.moderate_volume).toPrecision(3),\n\t\t\tpower_fairlyloud: powerCalculation(sensitivity, volumes.fairlyloud_volume).toPrecision(4),\n\t\t\tpower_veryloud: powerCalculation(sensitivity, volumes.veryloud_volume).toPrecision(5),\n\t\t\tpower_painful: powerCalculation(sensitivity, volumes.painful_volume).toPrecision(5),\n\t\t\tvoltage_safe: voltageCalculation(powerCalculation(sensitivity,volumes.safe_volume), impedance).toPrecision(2),\n\t\t\tvoltage_moderate: voltageCalculation(powerCalculation(sensitivity,volumes.moderate_volume), impedance).toPrecision(3),\n\t\t\tvoltage_fairlyloud: voltageCalculation(powerCalculation(sensitivity,volumes.fairlyloud_volume), impedance).toPrecision(4),\n\t\t\tvoltage_veryloud: voltageCalculation(powerCalculation(sensitivity,volumes.veryloud_volume), impedance).toPrecision(4),\n\t\t\tvoltage_painful: voltageCalculation(powerCalculation(sensitivity,volumes.painful_volume), impedance).toPrecision(4),\n\t\t\tcurrent_safe: currentCalculation(powerCalculation(sensitivity,volumes.safe_volume), impedance).toPrecision(3),\n\t\t\tcurrent_moderate: currentCalculation(powerCalculation(sensitivity,volumes.moderate_volume), impedance).toPrecision(4),\n\t\t\tcurrent_fairlyloud: currentCalculation(powerCalculation(sensitivity,volumes.fairlyloud_volume), impedance).toPrecision(4),\n\t\t\tcurrent_veryloud: currentCalculation(powerCalculation(sensitivity,volumes.veryloud_volume), impedance).toPrecision(4),\n\t\t\tcurrent_painful: currentCalculation(powerCalculation(sensitivity,volumes.painful_volume), impedance).toPrecision(4),\n\t\t}));\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"initialpage\">\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t  <h1> Thanks for coming to the headphone amp calculator page </h1><br />\n\t\t\t  <h3> Headphone Impedance is {this.state.impedance} </h3><br />\n\t\t\t  <h3> Headphone Sensitivity is {this.state.sensitivity} </h3><br />\n\t\t\t  <p> Impedance (Ohms): </p>\n\t\t\t  <input\n\t\t\t  \tname=\"impedance\"\n\t\t\t    className=\"impedance\"\n\t\t\t    type=\"text\"\n\t\t\t    placeholder=\"Impedance\"\n\t\t\t    onChange={this.handleChange}\n   \t\t\t    value={this.state.impedance}\n\t\t\t  />\n\t\t\t  {this.state.errormessageone}\n\t\t\t  <p> Sensitivity (db SPL / mW): </p>\n\t\t\t  <input\n\t\t\t  \tname=\"sensitivity\"\n\t\t\t    className=\"sensitivity\"\n\t\t\t    type=\"text\"\n\t\t\t    placeholder=\"Sensitivity\"\n\t\t\t    onChange={this.handleChange}\n\t\t\t    value={this.state.sensitivity}\n\t\t\t  />\n\t\t\t  {this.state.errormessagetwo}\n\t\t\t  <br /> <br />\n\t\t\t  <button \n\t\t\t    type=\"submit\"\n\t\t\t    className=\"submit\"\n\t\t\t    >Calculate\n\t\t\t  </button>\n\t\t\t  <br /><br />\n\t\t\t</form>\n\t\t\t  <div>\n\t\t\t    <Tableresults \n\t\t\t    power_safe={this.state.power_safe} \n\t\t\t    power_moderate={this.state.power_moderate}\n\t\t\t    power_fairlyloud={this.state.power_fairlyloud}\n\t\t\t    power_veryloud={this.state.power_veryloud}\n\t\t\t    power_painful={this.state.power_painful}\n\t\t\t    voltage_safe={this.state.voltage_safe}\n\t\t\t    voltage_moderate={this.state.voltage_moderate}\n\t\t\t    voltage_fairlyloud={this.state.voltage_fairlyloud}\n\t\t\t    voltage_veryloud={this.state.voltage_veryloud}\n\t\t\t    voltage_painful={this.state.voltage_painful}\n\t\t\t    current_safe={this.state.current_safe}\n\t\t\t    current_moderate={this.state.current_moderate}\n\t\t\t    current_fairlyloud={this.state.current_fairlyloud}\n\t\t\t    current_veryloud={this.state.current_veryloud}\n\t\t\t    current_painful={this.state.current_painful}\n\t\t\t    />\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nReactDOM.render(\n\t<InputForm />,\n\tdocument.getElementById('root')\n);\n\n// Printing out volumes array\n// for(var index in volumes) {\n//\tdocument.write(index + \" : \" + volumes[index] + \" dB SPL\" + \"<br />\");\n//}\n\n// Printing out calculated power calculations from the volumes array\n// document.write( \"<br />\")\t\t// just putting space between\n// for(var index in volumes) {\n//\tdocument.write( powerCalculation(sensitivity, volumes[index]).toPrecision(3) + \" mW\" + \"<br />\" );\n//}"]},"metadata":{},"sourceType":"module"}