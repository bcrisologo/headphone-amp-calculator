{"ast":null,"code":"// Calculation Functions and Constants used\n// Target volume constants\nconst volumes = {\n  safe_volume: 85,\n  moderate_volume: 100,\n  fairlyloud_volume: 110,\n  veryloud_volume: 115,\n  painful_volume: 120\n};\nlet sensitivity = this.props.sensitivity; // Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / mW\"\n\nfunction powerCalculation_mws(sensitivity, volume_level) {\n  return 10 ** ((volume_level - sensitivity) / 10);\n} // Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / Vrms\"\n\n\nfunction powerCalculation_vrms(sensitivity, volume_level, impedance) {\n  return 10 ** ((volume_level - (sensitivity - 10 * Math.log(1000 / impedance) / Math.log(10))) / 10);\n} // Base calculation for Voltage Requirements in Volts Root Mean Square (VRMS)\n\n\nfunction voltageCalculation(power, impedance) {\n  return Math.sqrt(power / 1000 * impedance);\n} // Base calculation for Current Requirements in milliAmps (mA)\n\n\nfunction currentCalculation(power, impedance) {\n  return Math.sqrt(power / (1000 * impedance)) * 1000;\n}\n\nvar test_power_mw = {\n  pp_safe: powerCalculation_mws(sensitivity, volumes.safe_volume),\n  pp_moderate: powerCalculation_mws(sensitivity.volumes.moderate_volume)\n};\nexport { volumes, powerCalculation_mws, powerCalculation_vrms, voltageCalculation, currentCalculation };","map":{"version":3,"sources":["/home/blaise/git-repos/headphone-amp-calculator/src/Calculations.js"],"names":["volumes","safe_volume","moderate_volume","fairlyloud_volume","veryloud_volume","painful_volume","sensitivity","props","powerCalculation_mws","volume_level","powerCalculation_vrms","impedance","Math","log","voltageCalculation","power","sqrt","currentCalculation","test_power_mw","pp_safe","pp_moderate"],"mappings":"AAAA;AAGA;AACA,MAAMA,OAAO,GAAG;AACfC,EAAAA,WAAW,EAAE,EADE;AAEfC,EAAAA,eAAe,EAAE,GAFF;AAGfC,EAAAA,iBAAiB,EAAE,GAHJ;AAIfC,EAAAA,eAAe,EAAE,GAJF;AAKfC,EAAAA,cAAc,EAAE;AALD,CAAhB;AAQA,IAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B,C,CAEA;AACA;;AACA,SAASE,oBAAT,CAA8BF,WAA9B,EAA2CG,YAA3C,EAAyD;AACxD,SAAO,OAAO,CAACA,YAAY,GAAGH,WAAhB,IAA+B,EAAtC,CAAP;AACA,C,CAED;AACA;;;AACA,SAASI,qBAAT,CAA+BJ,WAA/B,EAA4CG,YAA5C,EAA0DE,SAA1D,EAAqE;AACpE,SAAO,OAAO,CAACF,YAAY,IAAIH,WAAW,GAAG,KAAMM,IAAI,CAACC,GAAL,CAAS,OAAOF,SAAhB,CAAN,GAAoCC,IAAI,CAACC,GAAL,CAAS,EAAT,CAAtD,CAAb,IAAoF,EAA3F,CAAP;AACA,C,CAED;;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCJ,SAAnC,EAA8C;AAC7C,SAAOC,IAAI,CAACI,IAAL,CAAUD,KAAK,GAAG,IAAR,GAAeJ,SAAzB,CAAP;AACA,C,CAED;;;AACA,SAASM,kBAAT,CAA4BF,KAA5B,EAAmCJ,SAAnC,EAA8C;AAC7C,SAAOC,IAAI,CAACI,IAAL,CAAUD,KAAK,IAAI,OAAOJ,SAAX,CAAf,IAAwC,IAA/C;AACA;;AAED,IAAIO,aAAa,GAAG;AACnBC,EAAAA,OAAO,EAAEX,oBAAoB,CAACF,WAAD,EAAcN,OAAO,CAACC,WAAtB,CADV;AAEnBmB,EAAAA,WAAW,EAAEZ,oBAAoB,CAACF,WAAW,CAAEN,OAAb,CAAqBE,eAAtB;AAFd,CAApB;AAKA,SACCF,OADD,EAECQ,oBAFD,EAGCE,qBAHD,EAICI,kBAJD,EAKCG,kBALD","sourcesContent":["// Calculation Functions and Constants used\n\n\n// Target volume constants\nconst volumes = {\n\tsafe_volume: 85,\n\tmoderate_volume: 100,\n\tfairlyloud_volume: 110,\n\tveryloud_volume: 115,\n\tpainful_volume: 120\n};\n\nlet sensitivity = this.props.sensitivity;\n\n// Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / mW\"\nfunction powerCalculation_mws(sensitivity, volume_level) {\n\treturn 10 ** ((volume_level - sensitivity) / 10)\n}\n\n// Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / Vrms\"\nfunction powerCalculation_vrms(sensitivity, volume_level, impedance) {\n\treturn 10 ** ((volume_level - (sensitivity - 10 * (Math.log(1000 / impedance)) / Math.log(10))) / 10)\n}\n\n// Base calculation for Voltage Requirements in Volts Root Mean Square (VRMS)\nfunction voltageCalculation(power, impedance) {\n\treturn Math.sqrt(power / 1000 * impedance)\n}\n\n// Base calculation for Current Requirements in milliAmps (mA)\nfunction currentCalculation(power, impedance) {\n\treturn Math.sqrt(power / (1000 * impedance)) * 1000\n}\n\nvar test_power_mw = {\n\tpp_safe: powerCalculation_mws(sensitivity, volumes.safe_volume),\n\tpp_moderate: powerCalculation_mws(sensitivity. volumes.moderate_volume),\n};\n\nexport {\n\tvolumes,\n\tpowerCalculation_mws,\n\tpowerCalculation_vrms,\n\tvoltageCalculation,\n\tcurrentCalculation\n}"]},"metadata":{},"sourceType":"module"}