{"ast":null,"code":"// Calculation Functions and Constants used\n// Target volume constants\nexport const volumes = {\n  safe_volume: 85,\n  moderate_volume: 100,\n  fairlyloud_volume: 110,\n  veryloud_volume: 115,\n  painful_volume: 120\n};\nconst {\n  safe_volume,\n  moderate_volume,\n  fairlyloud_volume,\n  veryloud_volume,\n  painful_volume\n} = volumes; // Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / mW\"\n\nexport function powerCalculation_mws(sensitivity, volume_level) {\n  return 10 ** ((volume_level - sensitivity) / 10);\n} // Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / Vrms\"\n\nexport function powerCalculation_vrms(sensitivity, volume_level, impedance) {\n  return 10 ** ((volume_level - (sensitivity - 10 * Math.log(1000 / impedance) / Math.log(10))) / 10);\n} // Base calculation for Voltage Requirements in Volts Root Mean Square (VRMS)\n\nexport function voltageCalculation(power, impedance) {\n  return Math.sqrt(power / 1000 * impedance);\n} // Base calculation for Current Requirements in milliAmps (mA)\n\nexport function currentCalculation(power, impedance) {\n  return Math.sqrt(power / (1000 * impedance)) * 1000;\n}\nexport function mw_power_results(sensitivity, volume_level) {\n  let power_safe = '';\n  let power_moderate = '';\n  power_safe = powerCalculation_mws(sensitivity, volumes.safe_volume);\n  power_moderate = powerCalculation_mws(sensitivity, volumes.moderate_volume);\n  return {\n    power_safe: power_safe,\n    power_moderate: power_moderate\n  };\n}","map":{"version":3,"sources":["/home/blaise/git-repos/headphone-amp-calculator/src/Calculations.js"],"names":["volumes","safe_volume","moderate_volume","fairlyloud_volume","veryloud_volume","painful_volume","powerCalculation_mws","sensitivity","volume_level","powerCalculation_vrms","impedance","Math","log","voltageCalculation","power","sqrt","currentCalculation","mw_power_results","power_safe","power_moderate"],"mappings":"AAAA;AAGA;AACA,OAAO,MAAMA,OAAO,GAAG;AACtBC,EAAAA,WAAW,EAAE,EADS;AAEtBC,EAAAA,eAAe,EAAE,GAFK;AAGtBC,EAAAA,iBAAiB,EAAE,GAHG;AAItBC,EAAAA,eAAe,EAAE,GAJK;AAKtBC,EAAAA,cAAc,EAAE;AALM,CAAhB;AAOP,MAAM;AAAEJ,EAAAA,WAAF;AAAeC,EAAAA,eAAf;AACJC,EAAAA,iBADI;AACeC,EAAAA,eADf;AAEJC,EAAAA;AAFI,IAGFL,OAHJ,C,CAKA;AACA;;AACA,OAAO,SAASM,oBAAT,CAA8BC,WAA9B,EAA2CC,YAA3C,EAAyD;AAC/D,SAAO,OAAO,CAACA,YAAY,GAAGD,WAAhB,IAA+B,EAAtC,CAAP;AACA,C,CAED;AACA;;AACA,OAAO,SAASE,qBAAT,CAA+BF,WAA/B,EAA4CC,YAA5C,EAA0DE,SAA1D,EAAqE;AAC3E,SAAO,OAAO,CAACF,YAAY,IAAID,WAAW,GAAG,KAAMI,IAAI,CAACC,GAAL,CAAS,OAAOF,SAAhB,CAAN,GAAoCC,IAAI,CAACC,GAAL,CAAS,EAAT,CAAtD,CAAb,IAAoF,EAA3F,CAAP;AACA,C,CAED;;AACA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCJ,SAAnC,EAA8C;AACpD,SAAOC,IAAI,CAACI,IAAL,CAAUD,KAAK,GAAG,IAAR,GAAeJ,SAAzB,CAAP;AACA,C,CAED;;AACA,OAAO,SAASM,kBAAT,CAA4BF,KAA5B,EAAmCJ,SAAnC,EAA8C;AACpD,SAAOC,IAAI,CAACI,IAAL,CAAUD,KAAK,IAAI,OAAOJ,SAAX,CAAf,IAAwC,IAA/C;AACA;AAED,OAAO,SAASO,gBAAT,CAA0BV,WAA1B,EAAuCC,YAAvC,EAAqD;AAC3D,MAAIU,UAAU,GAAG,EAAjB;AACA,MAAIC,cAAc,GAAG,EAArB;AACAD,EAAAA,UAAU,GAAGZ,oBAAoB,CAACC,WAAD,EAAcP,OAAO,CAACC,WAAtB,CAAjC;AACAkB,EAAAA,cAAc,GAAGb,oBAAoB,CAACC,WAAD,EAAcP,OAAO,CAACE,eAAtB,CAArC;AACA,SAAO;AACNgB,IAAAA,UAAU,EAAGA,UADP;AAENC,IAAAA,cAAc,EAAGA;AAFX,GAAP;AAIA","sourcesContent":["// Calculation Functions and Constants used\n\n\n// Target volume constants\nexport const volumes = {\n\tsafe_volume: 85,\n\tmoderate_volume: 100,\n\tfairlyloud_volume: 110,\n\tveryloud_volume: 115,\n\tpainful_volume: 120\n};\nconst { safe_volume, moderate_volume, \n\t\tfairlyloud_volume, veryloud_volume, \n\t\tpainful_volume } \n\t\t= volumes;\n\n// Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / mW\"\nexport function powerCalculation_mws(sensitivity, volume_level) {\n\treturn 10 ** ((volume_level - sensitivity) / 10)\n}\n\n// Base calculation for Power Requirements in milliWatts (mW)\n// This is if sensitivity is in \"db / Vrms\"\nexport function powerCalculation_vrms(sensitivity, volume_level, impedance) {\n\treturn 10 ** ((volume_level - (sensitivity - 10 * (Math.log(1000 / impedance)) / Math.log(10))) / 10)\n}\n\n// Base calculation for Voltage Requirements in Volts Root Mean Square (VRMS)\nexport function voltageCalculation(power, impedance) {\n\treturn Math.sqrt(power / 1000 * impedance)\n}\n\n// Base calculation for Current Requirements in milliAmps (mA)\nexport function currentCalculation(power, impedance) {\n\treturn Math.sqrt(power / (1000 * impedance)) * 1000\n}\n\nexport function mw_power_results(sensitivity, volume_level) {\n\tlet power_safe = '';\n\tlet power_moderate = '';\n\tpower_safe = powerCalculation_mws(sensitivity, volumes.safe_volume);\n\tpower_moderate = powerCalculation_mws(sensitivity, volumes.moderate_volume);\n\treturn {\n\t\tpower_safe : power_safe,\n\t\tpower_moderate : power_moderate\n\t}\n}"]},"metadata":{},"sourceType":"module"}