{"ast":null,"code":"var _jsxFileName = \"/home/blaise/git-repos/headphone-amp-calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { volumes, powerresults, powerCalculation_mws, powerCalculation_vrms, voltageCalculation, currentCalculation } from './Calculations.js';\nimport Tableresults from './Tableresults.js';\nimport './index.css';\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sensitivity: '',\n      impedance: '',\n      testpower: '',\n      powerentry: 'mw',\n      isSubmitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // Logging purposes\n    console.log(event);\n    console.log(event.target.name);\n    console.log(event.target.value);\n    let {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Logging purposes\n\n    const data = this.state;\n    console.log(data); // Assigning the local variables to input\n\n    let impedance = this.state.impedance;\n    let sensitivity = this.state.sensitivity;\n    let isSubmitted = this.state.isSubmitted;\n    let powerentry = this.state.powerentry;\n    let testpower = this.state.testpower; // Checks if entries submitted are not numerical\n    // Returns an alert message if it fails in any test\n    // *** Can use ? operator for optimization\n\n    if (impedance !== '' && sensitivity !== '' && !Number(impedance) && !Number(sensitivity)) {\n      // Both entries are non-numbers\n      alert(\"Impedance and Sensitivity entries are not numbers\");\n    } else if (impedance !== '' && !Number(impedance)) {\n      // Impedance is not a number\n      alert(\"Impedance entry is not a number\");\n    } else if (sensitivity !== '' && !Number(sensitivity)) {\n      // Sensitivity is not a number\n      alert(\"Sensitivity entry is not a number\");\n    } else if (impedance === '' && sensitivity === '') {\n      // Empty field\n      return;\n    } else {\n      isSubmitted = true;\n    }\n    /*\n    // Power variables\n    let power_safe = powerCalculation_mws(sensitivity, volumes.safe_volume).toPrecision(2);\n    let power_moderate = powerCalculation_mws(sensitivity, volumes.moderate_volume).toPrecision(3);\n    let power_fairlyloud = powerCalculation_mws(sensitivity, volumes.fairlyloud_volume).toPrecision(4);\n    let power_veryloud = powerCalculation_mws(sensitivity, volumes.veryloud_volume).toPrecision(5);\n    let power_painful = powerCalculation_mws(sensitivity, volumes.painful_volume).toPrecision(5);\n    */\n\n\n    switch (powerentry) {\n      default:\n        testpower = powerCalculation_mws(sensitivity, volumes.fairlyloud_volume).toPrecision(2);\n        let power_safe = powerCalculation_mws(sensitivity, volumes.safe_volume).toPrecision(2);\n        let power_moderate = powerCalculation_mws(sensitivity, volumes.moderate_volume).toPrecision(3);\n        let power_fairlyloud = powerCalculation_mws(sensitivity, volumes.fairlyloud_volume).toPrecision(4);\n        let power_veryloud = powerCalculation_mws(sensitivity, volumes.veryloud_volume).toPrecision(5);\n        let power_painful = powerCalculation_mws(sensitivity, volumes.painful_volume).toPrecision(5);\n        break;\n\n      case \"vrms\":\n        testpower = powerCalculation_vrms(sensitivity, volumes.fairlyloud_volume, impedance).toPrecision(2);\n    } // Voltage variables\n\n\n    let voltage_safe = voltageCalculation(power_safe, impedance).toPrecision(2);\n    let voltage_moderate = voltageCalculation(power_moderate, impedance).toPrecision(3);\n    let voltage_fairlyloud = voltageCalculation(power_fairlyloud, impedance).toPrecision(4);\n    let voltage_veryloud = voltageCalculation(power_veryloud, impedance).toPrecision(4);\n    let voltage_painful = voltageCalculation(power_painful, impedance).toPrecision(4); // Current variables\n\n    let current_safe = currentCalculation(power_safe, impedance).toPrecision(2);\n    let current_moderate = currentCalculation(power_moderate, impedance).toPrecision(4);\n    let current_fairlyloud = currentCalculation(power_fairlyloud, impedance).toPrecision(4);\n    let current_veryloud = currentCalculation(power_veryloud, impedance).toPrecision(4);\n    let current_painful = currentCalculation(power_painful, impedance).toPrecision(4);\n    this.setState(state => ({\n      isSubmitted: isSubmitted,\n      powerentry: powerentry,\n      testpower: testpower,\n      impedance: impedance,\n      sensitivity: sensitivity,\n      power_safe: power_safe,\n      power_moderate: power_moderate,\n      power_fairlyloud: power_fairlyloud,\n      power_veryloud: power_veryloud,\n      power_painful: power_painful,\n      voltage_safe: voltage_safe,\n      voltage_moderate: voltage_moderate,\n      voltage_fairlyloud: voltage_fairlyloud,\n      voltage_veryloud: voltage_veryloud,\n      voltage_painful: voltage_painful,\n      current_safe: current_safe,\n      current_moderate: current_moderate,\n      current_fairlyloud: current_fairlyloud,\n      current_veryloud: current_veryloud,\n      current_painful: current_painful\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"initialpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }\n    }, \"Headphone Amplifier Calculator\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }\n    }, \" Do you need an amp? Check the results below \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }, \" Check your headphone specifications and see the results \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dataentry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"textbox-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 8\n      }\n    }, \" Impedance \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"impedance\",\n      type: \"text\",\n      id: \"first\",\n      placeholder: \"Ohms\",\n      onChange: this.handleChange,\n      value: this.state.impedance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"textbox-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 8\n      }\n    }, \" Sensitivity \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sensitivity\",\n      type: \"text\",\n      id: \"second\",\n      placeholder: \"dB / mW\",\n      onChange: this.handleChange,\n      value: this.state.sensitivity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"powerentry\",\n      id: \"powerentry\",\n      onChange: this.handleChange,\n      value: this.state.powerentry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, \"db / mW\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"vrms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, \"db / Vrms\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 6\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 8\n      }\n    }, \"Calculate\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 6\n      }\n    }, \" Powerentry is \", this.state.powerentry, \" and Testpower value is \", this.state.testpower)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }\n    }, this.state.isSubmitted && /*#__PURE__*/React.createElement(Tableresults, {\n      power_safe: this.state.power_safe,\n      power_moderate: this.state.power_moderate,\n      power_fairlyloud: this.state.power_fairlyloud,\n      power_veryloud: this.state.power_veryloud,\n      power_painful: this.state.power_painful,\n      voltage_safe: this.state.voltage_safe,\n      voltage_moderate: this.state.voltage_moderate,\n      voltage_fairlyloud: this.state.voltage_fairlyloud,\n      voltage_veryloud: this.state.voltage_veryloud,\n      voltage_painful: this.state.voltage_painful,\n      current_safe: this.state.current_safe,\n      current_moderate: this.state.current_moderate,\n      current_fairlyloud: this.state.current_fairlyloud,\n      current_veryloud: this.state.current_veryloud,\n      current_painful: this.state.current_painful,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 8\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(InputForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 2\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/blaise/git-repos/headphone-amp-calculator/src/index.js"],"names":["React","ReactDOM","volumes","powerresults","powerCalculation_mws","powerCalculation_vrms","voltageCalculation","currentCalculation","Tableresults","InputForm","Component","constructor","props","state","sensitivity","impedance","testpower","powerentry","isSubmitted","handleChange","bind","handleSubmit","event","console","log","target","name","value","setState","preventDefault","data","Number","alert","fairlyloud_volume","toPrecision","power_safe","safe_volume","power_moderate","moderate_volume","power_fairlyloud","power_veryloud","veryloud_volume","power_painful","painful_volume","voltage_safe","voltage_moderate","voltage_fairlyloud","voltage_veryloud","voltage_painful","current_safe","current_moderate","current_fairlyloud","current_veryloud","current_painful","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,OAAR,EAAiBC,YAAjB,EAA+BC,oBAA/B,EAAqDC,qBAArD,EACCC,kBADD,EACqBC,kBADrB,QAC8C,mBAD9C;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,SAAS,EAAE,EAFC;AAGZC,MAAAA,SAAS,EAAE,EAHC;AAIZC,MAAAA,UAAU,EAAE,IAJA;AAKZC,MAAAA,WAAW,EAAE;AALD,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAEAD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,IAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaE,KAAzB;AAEA,QAAI;AAACA,MAAAA,KAAD;AAAQD,MAAAA;AAAR,QAAgBJ,KAAK,CAACG,MAA1B;AAEA,SAAKG,QAAL,CAAc;AACb,OAACF,IAAD,GAAQC;AADK,KAAd;AAGA;;AAGDN,EAAAA,YAAY,CAACC,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACO,cAAN,GADmB,CAGnB;;AACA,UAAMC,IAAI,GAAG,KAAKjB,KAAlB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EALmB,CAOnB;;AACA,QAAIf,SAAS,GAAG,KAAKF,KAAL,CAAWE,SAA3B;AACA,QAAID,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA7B;AACA,QAAII,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAA7B;AACA,QAAID,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAA5B;AACA,QAAID,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAA3B,CAZmB,CAcnB;AACA;AACA;;AACA,QAAGD,SAAS,KAAK,EAAd,IAAoBD,WAAW,KAAK,EAApC,IACF,CAACiB,MAAM,CAAChB,SAAD,CADL,IACoB,CAACgB,MAAM,CAACjB,WAAD,CAD9B,EAC6C;AAC5C;AACAkB,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACA,KAJD,MAKM,IAAGjB,SAAS,KAAK,EAAd,IAAoB,CAACgB,MAAM,CAAChB,SAAD,CAA9B,EAA2C;AAC/C;AACAiB,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACA,KAHI,MAIA,IAAGlB,WAAW,KAAK,EAAhB,IAAsB,CAACiB,MAAM,CAACjB,WAAD,CAAhC,EAA+C;AACnD;AACAkB,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACA,KAHI,MAIA,IAAGjB,SAAS,KAAK,EAAd,IAAoBD,WAAW,KAAK,EAAvC,EAA2C;AAC/C;AACA;AACA,KAHI,MAID;AACJI,MAAAA,WAAW,GAAG,IAAd;AACA;AAED;;;;;;;;;;AASA,YAAOD,UAAP;AACC;AACED,QAAAA,SAAS,GAAGZ,oBAAoB,CAACU,WAAD,EAAcZ,OAAO,CAAC+B,iBAAtB,CAApB,CAA6DC,WAA7D,CAAyE,CAAzE,CAAZ;AACA,YAAIC,UAAU,GAAG/B,oBAAoB,CAACU,WAAD,EAAcZ,OAAO,CAACkC,WAAtB,CAApB,CAAuDF,WAAvD,CAAmE,CAAnE,CAAjB;AACA,YAAIG,cAAc,GAAGjC,oBAAoB,CAACU,WAAD,EAAcZ,OAAO,CAACoC,eAAtB,CAApB,CAA2DJ,WAA3D,CAAuE,CAAvE,CAArB;AACA,YAAIK,gBAAgB,GAAGnC,oBAAoB,CAACU,WAAD,EAAcZ,OAAO,CAAC+B,iBAAtB,CAApB,CAA6DC,WAA7D,CAAyE,CAAzE,CAAvB;AACA,YAAIM,cAAc,GAAGpC,oBAAoB,CAACU,WAAD,EAAcZ,OAAO,CAACuC,eAAtB,CAApB,CAA2DP,WAA3D,CAAuE,CAAvE,CAArB;AACA,YAAIQ,aAAa,GAAGtC,oBAAoB,CAACU,WAAD,EAAcZ,OAAO,CAACyC,cAAtB,CAApB,CAA0DT,WAA1D,CAAsE,CAAtE,CAApB;AACA;;AACF,WAAK,MAAL;AACElB,QAAAA,SAAS,GAAGX,qBAAqB,CAACS,WAAD,EAAcZ,OAAO,CAAC+B,iBAAtB,EAAyClB,SAAzC,CAArB,CAAyEmB,WAAzE,CAAqF,CAArF,CAAZ;AAVH,KA/CmB,CA6DnB;;;AACA,QAAIU,YAAY,GAAGtC,kBAAkB,CAAC6B,UAAD,EAAapB,SAAb,CAAlB,CAA0CmB,WAA1C,CAAsD,CAAtD,CAAnB;AACA,QAAIW,gBAAgB,GAAGvC,kBAAkB,CAAC+B,cAAD,EAAiBtB,SAAjB,CAAlB,CAA8CmB,WAA9C,CAA0D,CAA1D,CAAvB;AACA,QAAIY,kBAAkB,GAAGxC,kBAAkB,CAACiC,gBAAD,EAAmBxB,SAAnB,CAAlB,CAAgDmB,WAAhD,CAA4D,CAA5D,CAAzB;AACA,QAAIa,gBAAgB,GAAGzC,kBAAkB,CAACkC,cAAD,EAAiBzB,SAAjB,CAAlB,CAA8CmB,WAA9C,CAA0D,CAA1D,CAAvB;AACA,QAAIc,eAAe,GAAG1C,kBAAkB,CAACoC,aAAD,EAAgB3B,SAAhB,CAAlB,CAA6CmB,WAA7C,CAAyD,CAAzD,CAAtB,CAlEmB,CAoEnB;;AACA,QAAIe,YAAY,GAAG1C,kBAAkB,CAAC4B,UAAD,EAAapB,SAAb,CAAlB,CAA0CmB,WAA1C,CAAsD,CAAtD,CAAnB;AACA,QAAIgB,gBAAgB,GAAG3C,kBAAkB,CAAC8B,cAAD,EAAiBtB,SAAjB,CAAlB,CAA8CmB,WAA9C,CAA0D,CAA1D,CAAvB;AACA,QAAIiB,kBAAkB,GAAG5C,kBAAkB,CAACgC,gBAAD,EAAmBxB,SAAnB,CAAlB,CAAgDmB,WAAhD,CAA4D,CAA5D,CAAzB;AACA,QAAIkB,gBAAgB,GAAG7C,kBAAkB,CAACiC,cAAD,EAAiBzB,SAAjB,CAAlB,CAA8CmB,WAA9C,CAA0D,CAA1D,CAAvB;AACA,QAAImB,eAAe,GAAG9C,kBAAkB,CAACmC,aAAD,EAAgB3B,SAAhB,CAAlB,CAA6CmB,WAA7C,CAAyD,CAAzD,CAAtB;AAEA,SAAKN,QAAL,CAAcf,KAAK,KAAK;AACvBK,MAAAA,WAAW,EAAEA,WADU;AAEvBD,MAAAA,UAAU,EAAEA,UAFW;AAGvBD,MAAAA,SAAS,EAAEA,SAHY;AAIvBD,MAAAA,SAAS,EAAEA,SAJY;AAKvBD,MAAAA,WAAW,EAAEA,WALU;AAMvBqB,MAAAA,UAAU,EAAEA,UANW;AAOvBE,MAAAA,cAAc,EAAEA,cAPO;AAQvBE,MAAAA,gBAAgB,EAAEA,gBARK;AASvBC,MAAAA,cAAc,EAAEA,cATO;AAUvBE,MAAAA,aAAa,EAAEA,aAVQ;AAWvBE,MAAAA,YAAY,EAAEA,YAXS;AAYvBC,MAAAA,gBAAgB,EAAEA,gBAZK;AAavBC,MAAAA,kBAAkB,EAAEA,kBAbG;AAcvBC,MAAAA,gBAAgB,EAAEA,gBAdK;AAevBC,MAAAA,eAAe,EAAEA,eAfM;AAgBvBC,MAAAA,YAAY,EAAEA,YAhBS;AAiBvBC,MAAAA,gBAAgB,EAAEA,gBAjBK;AAkBvBC,MAAAA,kBAAkB,EAAEA,kBAlBG;AAmBvBC,MAAAA,gBAAgB,EAAEA,gBAnBK;AAoBvBC,MAAAA,eAAe,EAAEA;AApBM,KAAL,CAAnB;AAsBA;;AAEDC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,QAAQ,EAAE,KAAKjC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,eACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzC,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAJF,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eAED;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,WAAW,EAAC,MAJd;AAKE,MAAA,QAAQ,EAAE,KAAKF,YALjB;AAMK,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,SANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,CADF,eAYE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEE;AACD,MAAA,IAAI,EAAC,aADJ;AAED,MAAA,IAAI,EAAC,MAFJ;AAGD,MAAA,EAAE,EAAC,QAHF;AAID,MAAA,WAAW,EAAC,SAJX;AAKD,MAAA,QAAQ,EAAE,KAAKI,YALd;AAMD,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,WANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAUD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,QAAQ,EAAE,KAAKK,YAHjB;AAIE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,UAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAOE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CAVC,CAZF,CALF,eAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,oBAsCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCT,eAuCI;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvCJ,eA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,KAAKJ,KAAL,CAAWI,UAA9B,8BAAkE,KAAKJ,KAAL,CAAWG,SAA7E,CADF,CA5CA,eA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CF,eA+CQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CR,CADA,eAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKH,KAAL,CAAWK,WAAX,iBACC,oBAAC,YAAD;AACA,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWsB,UADvB;AAEA,MAAA,cAAc,EAAE,KAAKtB,KAAL,CAAWwB,cAF3B;AAGA,MAAA,gBAAgB,EAAE,KAAKxB,KAAL,CAAW0B,gBAH7B;AAIA,MAAA,cAAc,EAAE,KAAK1B,KAAL,CAAW2B,cAJ3B;AAKA,MAAA,aAAa,EAAE,KAAK3B,KAAL,CAAW6B,aAL1B;AAMA,MAAA,YAAY,EAAE,KAAK7B,KAAL,CAAW+B,YANzB;AAOA,MAAA,gBAAgB,EAAE,KAAK/B,KAAL,CAAWgC,gBAP7B;AAQA,MAAA,kBAAkB,EAAE,KAAKhC,KAAL,CAAWiC,kBAR/B;AASA,MAAA,gBAAgB,EAAE,KAAKjC,KAAL,CAAWkC,gBAT7B;AAUA,MAAA,eAAe,EAAE,KAAKlC,KAAL,CAAWmC,eAV5B;AAWA,MAAA,YAAY,EAAE,KAAKnC,KAAL,CAAWoC,YAXzB;AAYA,MAAA,gBAAgB,EAAE,KAAKpC,KAAL,CAAWqC,gBAZ7B;AAaA,MAAA,kBAAkB,EAAE,KAAKrC,KAAL,CAAWsC,kBAb/B;AAcA,MAAA,gBAAgB,EAAE,KAAKtC,KAAL,CAAWuC,gBAd7B;AAeA,MAAA,eAAe,EAAE,KAAKvC,KAAL,CAAWwC,eAf5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlDF,CADD;AA0EA;;AA5MsC;;AAgNxCpD,QAAQ,CAACqD,MAAT,eACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAECC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {volumes, powerresults, powerCalculation_mws, powerCalculation_vrms,\n\tvoltageCalculation, currentCalculation} from './Calculations.js';\nimport Tableresults from './Tableresults.js';\nimport './index.css';\n\nclass InputForm extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tsensitivity: '', \n\t\t\timpedance: '',\n\t\t\ttestpower: '',\n\t\t\tpowerentry: 'mw',\n\t\t\tisSubmitted: false\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\t handleChange(event) {\n\t\t// Logging purposes\n\t\tconsole.log(event)\n\t\tconsole.log(event.target.name)\n\t\tconsole.log(event.target.value)\n\n\t\tlet {value, name} = event.target;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\t\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\t// Logging purposes\n\t\tconst data = this.state;\n\t\tconsole.log(data)\n\n\t\t// Assigning the local variables to input\n\t\tlet impedance = this.state.impedance;\n\t\tlet sensitivity = this.state.sensitivity;\n\t\tlet isSubmitted = this.state.isSubmitted;\n\t\tlet powerentry = this.state.powerentry;\n\t\tlet testpower = this.state.testpower;\n\n\t\t// Checks if entries submitted are not numerical\n\t\t// Returns an alert message if it fails in any test\n\t\t// *** Can use ? operator for optimization\n\t\tif(impedance !== '' && sensitivity !== '' && \n\t\t\t!Number(impedance) && !Number(sensitivity)) {\n\t\t\t// Both entries are non-numbers\n\t\t\talert(\"Impedance and Sensitivity entries are not numbers\");\n\t\t}\n\t\t\telse if(impedance !== '' && !Number(impedance)) {\n\t\t\t\t// Impedance is not a number\n\t\t\t\talert(\"Impedance entry is not a number\");\n\t\t\t}\n\t\t\telse if(sensitivity !== '' && !Number(sensitivity)) {\n\t\t\t\t// Sensitivity is not a number\n\t\t\t\talert(\"Sensitivity entry is not a number\");\n\t\t\t}\n\t\t\telse if(impedance === '' && sensitivity === '') {\n\t\t\t\t// Empty field\n\t\t\t\treturn;\n\t\t\t}\n\t\telse {\n\t\t\tisSubmitted = true;\n\t\t}\n\n\t\t/*\n\t\t// Power variables\n\t\tlet power_safe = powerCalculation_mws(sensitivity, volumes.safe_volume).toPrecision(2);\n\t\tlet power_moderate = powerCalculation_mws(sensitivity, volumes.moderate_volume).toPrecision(3);\n\t\tlet power_fairlyloud = powerCalculation_mws(sensitivity, volumes.fairlyloud_volume).toPrecision(4);\n\t\tlet power_veryloud = powerCalculation_mws(sensitivity, volumes.veryloud_volume).toPrecision(5);\n\t\tlet power_painful = powerCalculation_mws(sensitivity, volumes.painful_volume).toPrecision(5);\n\t\t*/\n\n\t\tswitch(powerentry) {\n\t\t\tdefault:\n\t\t\t  testpower = powerCalculation_mws(sensitivity, volumes.fairlyloud_volume).toPrecision(2);\n\t\t\t  let power_safe = powerCalculation_mws(sensitivity, volumes.safe_volume).toPrecision(2);\n\t\t\t  let power_moderate = powerCalculation_mws(sensitivity, volumes.moderate_volume).toPrecision(3);\n\t\t\t  let power_fairlyloud = powerCalculation_mws(sensitivity, volumes.fairlyloud_volume).toPrecision(4);\n\t\t\t  let power_veryloud = powerCalculation_mws(sensitivity, volumes.veryloud_volume).toPrecision(5);\n\t\t\t  let power_painful = powerCalculation_mws(sensitivity, volumes.painful_volume).toPrecision(5);\n\t\t\t  break;\n\t\t\tcase \"vrms\":\n\t\t\t  testpower = powerCalculation_vrms(sensitivity, volumes.fairlyloud_volume, impedance).toPrecision(2);\n\t\t}\n\n\n\t\t// Voltage variables\n\t\tlet voltage_safe = voltageCalculation(power_safe, impedance).toPrecision(2);\n\t\tlet voltage_moderate = voltageCalculation(power_moderate, impedance).toPrecision(3);\n\t\tlet voltage_fairlyloud = voltageCalculation(power_fairlyloud, impedance).toPrecision(4);\n\t\tlet voltage_veryloud = voltageCalculation(power_veryloud, impedance).toPrecision(4);\n\t\tlet voltage_painful = voltageCalculation(power_painful, impedance).toPrecision(4);\n\n\t\t// Current variables\n\t\tlet current_safe = currentCalculation(power_safe, impedance).toPrecision(2);\n\t\tlet current_moderate = currentCalculation(power_moderate, impedance).toPrecision(4);\n\t\tlet current_fairlyloud = currentCalculation(power_fairlyloud, impedance).toPrecision(4);\n\t\tlet current_veryloud = currentCalculation(power_veryloud, impedance).toPrecision(4);\n\t\tlet current_painful = currentCalculation(power_painful, impedance).toPrecision(4);\n\n\t\tthis.setState(state => ({\n\t\t\tisSubmitted: isSubmitted,\n\t\t\tpowerentry: powerentry,\n\t\t\ttestpower: testpower,\n\t\t\timpedance: impedance,\n\t\t\tsensitivity: sensitivity,\n\t\t\tpower_safe: power_safe,\n\t\t\tpower_moderate: power_moderate,\n\t\t\tpower_fairlyloud: power_fairlyloud,\n\t\t\tpower_veryloud: power_veryloud,\n\t\t\tpower_painful: power_painful,\n\t\t\tvoltage_safe: voltage_safe,\n\t\t\tvoltage_moderate: voltage_moderate,\n\t\t\tvoltage_fairlyloud: voltage_fairlyloud,\n\t\t\tvoltage_veryloud: voltage_veryloud,\n\t\t\tvoltage_painful: voltage_painful,\n\t\t\tcurrent_safe: current_safe,\n\t\t\tcurrent_moderate: current_moderate,\n\t\t\tcurrent_fairlyloud: current_fairlyloud,\n\t\t\tcurrent_veryloud: current_veryloud,\n\t\t\tcurrent_painful: current_painful,\n\t\t}));\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"initialpage\">\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t  <h1>Headphone Amplifier Calculator</h1><br />\n\t\t\t  <p> Do you need an amp? Check the results below </p>\n\t\t\t  <br />\n\t\t\t  <p> Check your headphone specifications and see the results </p>\n\t\t\t  <div className=\"dataentry\">\n\t\t\t    <div className=\"textbox-1\">\n\t\t\t    <p> Impedance </p>\n\t\t\t\t  <input\n\t\t\t\t    name=\"impedance\"\n\t\t\t\t    type=\"text\"\n\t\t\t\t    id=\"first\"\n\t\t\t\t    placeholder=\"Ohms\"\n\t\t\t\t    onChange={this.handleChange}\n\t   \t\t\t    value={this.state.impedance}\n\t\t\t\t  />\n\t\t\t    </div>\n\t\t\t    <div className=\"textbox-2\">\n\t\t\t    <p> Sensitivity </p>\n    \t\t\t  <input\n\t\t\t\t    name=\"sensitivity\"\n\t\t\t\t    type=\"text\"\n\t\t\t\t    id=\"second\"\n\t\t\t\t    placeholder=\"dB / mW\"\n\t\t\t\t    onChange={this.handleChange}\n\t\t\t\t    value={this.state.sensitivity}\n\t\t\t\t   />\n\t\t\t\t  <select \n\t\t\t\t    name=\"powerentry\"\n\t\t\t\t    id=\"powerentry\"\n\t\t\t\t    onChange={this.handleChange}\n\t\t\t\t    value={this.state.powerentry}\n\t\t\t\t  >\n\t\t\t\t    <option value=\"mw\">db / mW</option>\n\t\t\t\t    <option value=\"vrms\">db / Vrms</option>\n\t\t\t\t  </select>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t  <br /> <br />\n\t\t\t    <button \n\t\t\t      type=\"submit\"\n\t\t\t      id=\"submit\"\n\t\t\t      >Calculate\n\t\t\t    </button>\n\t\t\t<div>\n\t\t\t  <p> Powerentry is {this.state.powerentry} and Testpower value is {this.state.testpower}</p>\n\t\t\t</div>\n\t\t\t  <br /><br />\n\t\t\t</form>\n\t\t\t  <div>\n\t\t\t  {this.state.isSubmitted &&\n\t\t\t    <Tableresults \n\t\t\t    power_safe={this.state.power_safe} \n\t\t\t    power_moderate={this.state.power_moderate}\n\t\t\t    power_fairlyloud={this.state.power_fairlyloud}\n\t\t\t    power_veryloud={this.state.power_veryloud}\n\t\t\t    power_painful={this.state.power_painful}\n\t\t\t    voltage_safe={this.state.voltage_safe}\n\t\t\t    voltage_moderate={this.state.voltage_moderate}\n\t\t\t    voltage_fairlyloud={this.state.voltage_fairlyloud}\n\t\t\t    voltage_veryloud={this.state.voltage_veryloud}\n\t\t\t    voltage_painful={this.state.voltage_painful}\n\t\t\t    current_safe={this.state.current_safe}\n\t\t\t    current_moderate={this.state.current_moderate}\n\t\t\t    current_fairlyloud={this.state.current_fairlyloud}\n\t\t\t    current_veryloud={this.state.current_veryloud}\n\t\t\t    current_painful={this.state.current_painful}\n\t\t\t    />\n\t\t\t  }\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nReactDOM.render(\n\t<InputForm />,\n\tdocument.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}