{"ast":null,"code":"var _jsxFileName = \"/home/blaise/git-repos/headphone-amp-calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // declaring default volume levels in db PL\n\nconst safe_volume = 85;\nconst moderate_volume = 100;\nconst fairlyloud_volume = 110;\nconst veryloud_volume = 115;\nconst painful_volume = 120;\n/* Functions for power calculations */\n\nfunction powerCalculation(sensitivity) {\n  let power_safe;\n  let power_moderate;\n  let power_fairlyloud;\n  let power_veryloud;\n  let power_painful;\n  power_safe = 10 ** ((safe_volume - sensitivity) / 10);\n  power_moderate = 10 ** ((moderate_volume - sensitivity) / 10);\n  power_fairlyloud = 10 ** ((fairlyloud_volume - sensitivity) / 10);\n  power_veryloud = 10 ** ((veryloud_volume - sensitivity) / 10);\n  power_painful = 10 ** ((painful_volume - sensitivity) / 10);\n  return {\n    power_safe: power_safe,\n    power_moderate: power_moderate,\n    power_fairlyloud: power_fairlyloud,\n    power_veryloud: power_veryloud,\n    power_painful: power_painful\n  };\n}\n/* Might need to act a react component for the Calculate button */\n\n\nclass HeadphoneSpecs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      impedance: '',\n      sensitivity: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {// Need for multiple events\n    // const name = target.name;\n    // const value = event.target.value;\n\n    /*\n    this.setState({\n    \t[name]: value\n    });\n    */\n  }\n\n  handleSubmit(event) {\n    // Need for multiple submits\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }\n    }, \" Headphone Impedance (Ohms): \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"impedance\",\n      type: \"text\" // need to be able to convert text to number\n      ,\n      id: \"impedance\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, \" Headphone Sensitivity (dB SPL / mW): \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sensitivity\",\n      type: \"text\" // need to be able to convert text to number\n      ,\n      id: \"sensitivity\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      id: \"calculate\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }, \"Calculate\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(HeadphoneSpecs, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 2\n  }\n}), document.getElementsByID('powerCalculation(97)'), document.getElementById('root'));","map":{"version":3,"sources":["/home/blaise/git-repos/headphone-amp-calculator/src/index.js"],"names":["React","ReactDOM","safe_volume","moderate_volume","fairlyloud_volume","veryloud_volume","painful_volume","powerCalculation","sensitivity","power_safe","power_moderate","power_fairlyloud","power_veryloud","power_painful","HeadphoneSpecs","Component","constructor","props","state","impedance","handleChange","bind","handleSubmit","event","preventDefault","render","value","document","getElementsByID","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// declaring default volume levels in db PL\nconst safe_volume = 85;\nconst moderate_volume = 100;\nconst fairlyloud_volume = 110;\nconst veryloud_volume = 115;\nconst painful_volume = 120;\n\n/* Functions for power calculations */\nfunction powerCalculation(sensitivity) {\n\tlet power_safe;\n\tlet power_moderate;\n\tlet power_fairlyloud;\n\tlet power_veryloud;\n\tlet power_painful;\n\n\tpower_safe = 10**((safe_volume - sensitivity) / 10)\n\tpower_moderate = 10**((moderate_volume - sensitivity) / 10)\n\tpower_fairlyloud = 10**((fairlyloud_volume - sensitivity) / 10)\n\tpower_veryloud = 10**((veryloud_volume - sensitivity) / 10)\n\tpower_painful = 10**((painful_volume - sensitivity) / 10)\n\t\t\n\treturn {\n\t\tpower_safe : power_safe,\n\t\tpower_moderate : power_moderate,\n\t\tpower_fairlyloud : power_fairlyloud,\n\t\tpower_veryloud : power_veryloud,\n\t\tpower_painful : power_painful\n\t}\n}\n\n/* Might need to act a react component for the Calculate button */\n\nclass HeadphoneSpecs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timpedance: '',\n\t\t\tsensitivity: ''\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\t\n\thandleChange(event) {\n\t\t// Need for multiple events\n\t\t// const name = target.name;\n\t\t// const value = event.target.value;\n\t\t/*\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t\t*/\n\t}\n\n\thandleSubmit(event) {\n\t\t// Need for multiple submits\n\t\tevent.preventDefault();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t  <label>\n\t\t\t    <h3> Headphone Impedance (Ohms): </h3>\n\t\t\t    <input \n\t\t\t      name=\"impedance\"\n\t\t\t      type=\"text\" \t\t\t\t\t\t// need to be able to convert text to number\n\t\t\t      id=\"impedance\"\n\t\t\t      value={this.state.value}\n\t\t\t      onChange={this.handleChange}\n\t\t\t    />\n\t\t\t  </label>\n\t\t\t  <label>\n\t\t\t    <h3> Headphone Sensitivity (dB SPL / mW): </h3>\n\t\t\t    <input\n\t\t\t      name=\"sensitivity\"\n\t\t\t      type=\"text\"\t\t\t\t\t\t// need to be able to convert text to number\n\t\t\t      id=\"sensitivity\"\n\t\t\t      value={this.state.value}\n\t\t\t      onChange={this.handleChange}\n\t\t\t    />\n\t\t\t  </label>\n\t\t\t  <button \n\t\t\t  \ttype=\"submit\"\n\t\t\t  \tvalue=\"Submit\"\n\t\t\t  \tid=\"calculate\"\n\t\t\t    onClick={this.handleSubmit}\n\t\t\t  >\n\t\t\t  Calculate\n\t\t\t  </button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nReactDOM.render(\n\t<HeadphoneSpecs />,\n\tdocument.getElementsByID('powerCalculation(97)'),\n\tdocument.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}